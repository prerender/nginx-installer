worker_processes 1;
events {
    worker_connections 1024;
}
http {
    map $http_user_agent $prerender_ua {
        default 0;
        ~*Prerender 0;
        ~*googlebot 1;
        ~*yahoo!\ slurp 1;
        ~*bingbot 1;
        ~*yandex 1;
        ~*baiduspider 1;
        ~*facebookexternalhit 1;
        ~*twitterbot 1;
        ~*rogerbot 1;
        ~*linkedinbot 1;
        ~*embedly 1;
        ~*quora\ link\ preview 1;
        ~*showyoubot 1;
        ~*outbrain 1;
        ~*pinterest\/0\. 1;
        ~*developers.google.com\/\+\/web\/snippet 1;
        ~*slackbot 1;
        ~*vkshare 1;
        ~*w3c_validator 1;
        ~*redditbot 1;
        ~*applebot 1;
        ~*whatsapp 1;
        ~*flipboard 1;
        ~*tumblr 1;
        ~*bitlybot 1;
        ~*skypeuripreview 1;
        ~*nuzzel 1;
        ~*discordbot 1;
        ~*google\ page\ speed 1;
        ~*qwantify 1;
        ~*pinterestbot 1;
        ~*bitrix\ link\ preview 1;
        ~*xing-contenttabreceiver 1;
        ~*chrome-lighthouse 1;
        ~*telegrambot 1;
        ~*google-inspectiontool 1;
        ~*petalbot 1;
    }
    map $args $prerender_args {
        default $prerender_ua;
        ~(^|&)_escaped_fragment_= 1;
    }
    map $http_x_prerender $x_prerender {
        default $prerender_args;
        1 0;
    }
    map $uri $prerender {
        default $x_prerender;
        ~*\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|woff2|svg|eot) 0;
    }
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    # Default server
    server {
        listen 80 default_server;
        location / {
            return 444;
        }
    }
    # Server 1
    server {
        listen 80;
        server_name server1.example.com;
        location / {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
    # Server 2
    server {
        listen 8080;
        server_name server2.example.com;
        location / {
            if ($prerender = 1) {
                rewrite (.*) /prerenderio last;
            }
            proxy_pass http://localhost:4000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
        location /prerenderio {
            if ($prerender = 0) {
                return 404;
            }
            proxy_set_header X-Prerender-Token ff;
            proxy_set_header X-Prerender-Int-Type nginx_auto_installer;
            proxy_hide_header Cache-Control;
            add_header Cache-Control private,max-age=600,must-revalidate;
            resolver 8.8.8.8 8.8.4.4;
            set $prerender_host service.prerender.io;
            proxy_pass https://$prerender_host;
            rewrite .* /$scheme://$host$request_uri? break;
        }
    }
}